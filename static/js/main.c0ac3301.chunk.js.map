{"version":3,"sources":["assets/white_box.png","assets/thc_oil_box_side.png","assets/black.mp4","assets/thc_oil_box_front.png","assets/thc_oil_box_back.png","assets/cart.svg","Bits/FallingCherries/cherrypool.svg","Bits/Triangles/triangleswater.svg","Product/cherigrowfull.svg","Bits/Buttons/index.js","NavContext.js","Nav/Link.js","Nav/Menu.js","Nav/index.js","Metaphors/Context.js","Metaphors/MetaCube.js","Popup/styles.js","Popup/MetaLibConfirm.js","Popup/Over21.js","Popup/index.js","Metaphors/MetaLib.js","Metaphors/index.js","Bits/Loading/Context.js","Bits/Loading/Cherry.js","Bits/Triangles/index.js","Bits/Img/index.js","Product/Boxes.js","pages/Product.js","App.js","index.js"],"names":["module","exports","styled","button","props","background","color","NavContext","createContext","undefined","NavProvider","children","history","useHistory","Provider","value","goBack","document","getElementById","style","transform","setTimeout","goToProduct","console","log","a","div","width","m","height","side","contentLeft","metaphors","testMetaphors","i","push","Container","opacity","Wrapper","ButtonContainer","Button","MetaLibConfirm","useState","affirmation","setAffirmation","popContext","useContext","PopupContext","welcomeRef","useRef","useEffect","open","callback","metalib","current","close","id","content","onClick","ref","Over21","querySelector","play","window","location","href","Background","React","setOpen","pop","setPop","setContent","setCallback","clear","openPopup","type","Popup","createPortal","Consumer","popup","display","input","LoadingContext","imgMeta","preRenderWidth","innerWidth","loading","setLoading","transition","setTransition","src","process","name","whiteBox","forEach","imgObject","imgEl","Image","onload","aspect","endLoading","startLoading","img","App","useLocation","device","useTransition","pathname","from","enter","leave","DeviceContext","isMobile","DeviceProvider","setIsMobile","updateSize","innerHeight","addEventListener","removeEventListener","ReactDOM","render","StrictMode","basename"],"mappings":"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","file":"static/js/main.c0ac3301.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/white_box.c6afaf0f.png\";","module.exports = __webpack_public_path__ + \"static/media/thc_oil_box_side.14719b19.png\";","module.exports = __webpack_public_path__ + \"static/media/black.d7048d2b.mp4\";","module.exports = __webpack_public_path__ + \"static/media/thc_oil_box_front.0c151770.png\";","module.exports = __webpack_public_path__ + \"static/media/thc_oil_box_back.54980efa.png\";","module.exports = __webpack_public_path__ + \"static/media/cart.26937366.svg\";","module.exports = __webpack_public_path__ + \"static/media/cherrypool.b2c5d2bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/triangleswater.f14bded5.svg\";","module.exports = __webpack_public_path__ + \"static/media/cherigrowfull.122e710b.svg\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  background: ${(props) => props.background};\r\n  color: ${(props) => props.color};\r\n  border: none;\r\n  padding: 0px;\r\n  border-radius: 40px;\r\n  width: 170px;\r\n  height: 39px;\r\n  font-weight: 300;\r\n  font-size: 18px;\r\n  text-align: center;\r\n  margin: inherit;\r\n  display: block;\r\n  cursor: pointer;\r\n  font-family: Oswald;\r\n`;\r\n\r\nexport default function ({\r\n  children,\r\n  background = \"black\",\r\n  color = \"white\",\r\n  onClick,\r\n}) {\r\n  return (\r\n    <Button background={background} color={color} onClick={onClick}>\r\n      {children}\r\n    </Button>\r\n  );\r\n}\r\n","import React, { createContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const NavContext = createContext(undefined);\r\n\r\nconst pageRoot = () => document.getElementById(\"page-root\");\r\n\r\n// window.addEventListener(\"popstate\", (e) => e.preventDefault());\r\nexport default function NavProvider({ children }) {\r\n  const history = useHistory();\r\n  const goToProduct = () => {\r\n    console.log(history);\r\n    // pageRoot().style.transform = \"translateX(-100%)\";\r\n    // setTimeout(() => history.push(\"/product\"), 1000);\r\n  };\r\n\r\n  const goBack = () => {\r\n    pageRoot().style.transform = \"translate(100%)\";\r\n    setTimeout(() => history.goBack());\r\n  };\r\n\r\n  return (\r\n    <NavContext.Provider value={{ goBack, goToProduct }}>\r\n      {children}\r\n    </NavContext.Provider>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Link = styled.a`\r\n  color: white;\r\n  font-family: Oswald;\r\n`;\r\n\r\nexport default function ({ name }) {\r\n  return <Link>{name.split(\"-\").join(\" \").toUpperCase()}</Link>;\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport GetSome from \"../Bits/Buttons/GetSome\";\r\nimport Link from \"./Link\";\r\n\r\nconst Background = styled.div`\r\n  width: ${(props) => props.width + props.width * props.m}px;\r\n  height: ${(props) => props.height + props.height * 0.0}px;\r\n  background: black;\r\n  color: white;\r\n  position: fixed;\r\n  z-index: 0;\r\n  transform: rotate(45deg);\r\n  transform-origin: top;\r\n  top: ${(props) => props.side}px;\r\n  left: ${(props) => props.side}px;\r\n  transition: left 0.5s, top 0.5s;\r\n  &.out {\r\n    transition: left 1s, top 1s;\r\n  }\r\n  z-index: 1;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  position: absolute;\r\n  left: ${(props) => props.contentLeft}px;\r\n  color: white;\r\n  top: 94px;\r\n  transition: left 0.5s ease-in;\r\n  &.out {\r\n    transition: left 0.1s ease-out;\r\n  }\r\n  z-index: 2;\r\n  & div {\r\n    font-weight: 300;\r\n    font-size: 1.3rem;\r\n  }\r\n`;\r\n\r\nconst LinkGroup = styled.div`\r\n  margin: 20px;\r\n`;\r\n\r\nconst TextMe = () => (\r\n  <div style={{ margin: 20 }}>\r\n    <div>FOR QUESTIONS</div>\r\n    <div>OR TO SAY HI</div>\r\n    <div>TEXT \"🍒\" TO</div>\r\n    {/* <div>TO</div> */}\r\n    <div>+1 (386) 968-2989</div>\r\n  </div>\r\n);\r\n\r\nexport default function Menu({ openNav }) {\r\n  const a = window.innerWidth;\r\n  const b = window.innerHeight;\r\n  const c = Math.sqrt(a * a + b * b);\r\n  const mobileAspect = window.innerHeight > window.innerWidth;\r\n  const side = openNav ? 0 : -c;\r\n  const m = mobileAspect ? 0 : 0.5;\r\n  return (\r\n    <>\r\n      <Background\r\n        className={openNav ? \"in\" : \"out\"}\r\n        width={c}\r\n        height={c}\r\n        side={side}\r\n        m={m}\r\n      />\r\n      <Content\r\n        className={openNav ? \"in\" : \"out\"}\r\n        contentLeft={openNav ? 49 : -200}\r\n      >\r\n        <GetSome inverted={true} />\r\n        <LinkGroup>\r\n          <div>\r\n            <Link name=\"thc aloe vera lube\" />\r\n          </div>\r\n          <div>\r\n            <Link name=\"thc coconut oil lube\" />\r\n          </div>\r\n        </LinkGroup>\r\n        <LinkGroup>\r\n          <div>\r\n            <Link name=\"how it works\" />\r\n          </div>\r\n          <div>\r\n            <Link name=\"faq\" />\r\n          </div>\r\n        </LinkGroup>\r\n        <TextMe />\r\n      </Content>\r\n    </>\r\n  );\r\n}\r\n//-1956.103082px\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport GetSome from \"../Bits/Buttons/GetSome\";\r\nimport Cart from \"../Bits/Icons/Cart\";\r\nimport Menu from \"./Menu\";\r\n\r\nconst Container = styled.div``;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  /* width: 74%; */\r\n  margin: auto;\r\n  height: 80px;\r\n  z-index: 0;\r\n  position: relative;\r\n  color: white;\r\n  transition: color 3.5s, fill 0.5s;\r\n  z-index: 2;\r\n  margin: 0px 23px 0px;\r\n`;\r\n\r\nconst MenuButton = styled.div`\r\n  position: absolute;\r\n  transform: rotate(-45deg);\r\n  top: -26px;\r\n  left: -52px;\r\n  width: 120px;\r\n  text-align: center;\r\n  height: 30px;\r\n  padding-top: 40px;\r\n  line-height: 35px;\r\n  background: black;\r\n  color: white;\r\n  font-size: 0.8rem;\r\n  cursor: pointer;\r\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n  -webkit-tap-highlight-color: transparent;\r\n  z-index: 2;\r\n`;\r\n\r\nexport default function Nav({ device }) {\r\n  const [openNav, setOpenNav] = useState(false);\r\n  const location = useLocation();\r\n  const toggleOpenNav = () => setOpenNav(!openNav);\r\n  useEffect(() => {\r\n    setOpenNav(false);\r\n  }, [location]);\r\n  return (\r\n    <Container>\r\n      <Menu openNav={openNav} setOpenNav={setOpenNav} />\r\n      <Wrapper>\r\n        {/* <div\r\n          style={{\r\n            fontWeight: 800,\r\n            color: openNav ? \"white\" : \"black\",\r\n            transition: \"color .3s\",\r\n            fontSize: \"1.7rem\",\r\n            fontFamily: \"'Open Sans', sans-serif\",\r\n          }}\r\n        >\r\n          CHERI CHERI\r\n        </div> */}\r\n        <div style={{ display: \"flex\" }}>\r\n          {/* {location.pathname !== \"/product\" && !device.isMobile && <GetSome />} */}\r\n          <Cart fill={openNav ? \"white\" : \"black\"} />\r\n        </div>\r\n      </Wrapper>\r\n      <MenuButton onClick={toggleOpenNav}>\r\n        <div onClick={toggleOpenNav} style={{ cursor: \"pointer\" }}>\r\n          {!openNav ? \"MENU\" : \"CLOSE\"}\r\n        </div>\r\n      </MenuButton>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { createContext, useEffect, useState } from \"react\";\r\nimport { getMetaphors, sendMetaphor } from \"./fetchers\";\r\n\r\nconst shape = { metaphors: [] };\r\n\r\nexport const MetaContext = createContext(shape);\r\n\r\nconst testMetaphors = [\r\n  \"cheri cheri feels like my pussy is purring\",\r\n  \"1\",\r\n  \"2\",\r\n  \"3\",\r\n  \"4\",\r\n  \"5\",\r\n];\r\n\r\nfor (let i = 6; i < 100; i++) {\r\n  testMetaphors.push(`${i}`);\r\n}\r\n\r\nexport default function ({ children }) {\r\n  const [metaphors, setMetaphors] = useState([]);\r\n  const addMetaphor = (metaphor) => {\r\n    const duplicate = metaphors.find((m) => m === metaphor);\r\n    if (duplicate) return alert(\"already there\");\r\n    sendMetaphor(metaphor).then(updateMetaphors);\r\n    return;\r\n    // find first open slot -- TEST ONLY\r\n    const openSlotItem = metaphors.find((m) => parseInt(m));\r\n    const slotIndex = metaphors.indexOf(openSlotItem);\r\n\r\n    metaphors[slotIndex] = metaphor;\r\n    setMetaphors(metaphors);\r\n  };\r\n\r\n  const updateMetaphors = () => {\r\n    getMetaphors().then((data) => {\r\n      const metaphors = data.map((row) => row.metaphor);\r\n      //   if (metaphors.length < 5) {\r\n      //     for (let i = 6; i < 100; i++) {\r\n      //       metaphors.push(`${i}`);\r\n      //     }\r\n      //   }\r\n      setMetaphors(metaphors);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    updateMetaphors();\r\n    // setMetaphors(testMetaphors);\r\n  }, []);\r\n  return (\r\n    <MetaContext.Provider value={{ addMetaphor, metaphors }}>\r\n      {children}\r\n    </MetaContext.Provider>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { MetaContext } from \"./Context\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  background: black;\r\n  color: white;\r\n  text-align: center;\r\n  height: 350px;\r\n  display: flex;\r\n  margin: -1px;\r\n  .wrapper {\r\n    padding: 10%;\r\n  }\r\n`;\r\n\r\nconst Scene = styled.div`\r\n  width: 200px;\r\n  height: 200px;\r\n  perspective: 600px;\r\n  margin: auto;\r\n`;\r\n\r\nconst Cube = styled.div`\r\n  cursor: grab;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  transform-style: preserve-3d;\r\n  transform: translateZ(-100px);\r\n  transition: transform 1s;\r\n  &.show-front {\r\n    transform: translateZ(-100px) rotateY(0deg);\r\n  }\r\n  &.show-right {\r\n    transform: translateZ(-100px) rotateY(-90deg);\r\n  }\r\n  &.show-back {\r\n    transform: translateZ(-100px) rotateY(-180deg);\r\n  }\r\n  &.show-left {\r\n    transform: translateZ(-100px) rotateY(90deg);\r\n  }\r\n  &.show-top {\r\n    transform: translateZ(-100px) rotateX(-90deg);\r\n  }\r\n  &.show-bottom {\r\n    transform: translateZ(-100px) rotateX(90deg);\r\n  }\r\n`;\r\n\r\nconst CubeFace = styled.div`\r\n  position: absolute;\r\n  width: 200px;\r\n  height: 200px;\r\n  padding-top: 20px;\r\n  transition: color 1s;\r\n  font-size: 2rem;\r\n  &.cube__face--front {\r\n    transform: rotateY(0deg) translateZ(100px);\r\n  }\r\n  &.cube__face--right {\r\n    transform: rotateY(90deg) translateZ(100px);\r\n  }\r\n  &.cube__face--back {\r\n    transform: rotateY(180deg) translateZ(100px);\r\n  }\r\n  &.cube__face--left {\r\n    transform: rotateY(-90deg) translateZ(100px);\r\n  }\r\n  &.cube__face--top {\r\n    transform: rotateX(90deg) translateZ(100px);\r\n  }\r\n  &.cube__face--bottom {\r\n    transform: rotateX(-90deg) translateZ(100px);\r\n  }\r\n`;\r\n\r\n// const metaphors = [\r\n//   \"cheri cheri feels like my pussy is purring\",\r\n//   \"1\",\r\n//   \"2\",\r\n//   \"3\",\r\n//   \"4\",\r\n//   \"5\",\r\n// ];\r\n\r\n// for (let i = 6; i < 100; i++) {\r\n//   metaphors.push(`${i}`);\r\n// }\r\n\r\nconst rotations = [\r\n  \"show-back\",\r\n  \"show-right\",\r\n  \"show-left\",\r\n  \"show-top\",\r\n  \"show-bottom\",\r\n  \"show-front\",\r\n];\r\n\r\nconst cubeFaceClasses = [\r\n  \"cube__face--back\",\r\n  \"cube__face--right\",\r\n  \"cube__face--left\",\r\n  \"cube__face--top\",\r\n  \"cube__face--bottom\",\r\n  \"cube__face--front\",\r\n];\r\n\r\nexport default function () {\r\n  const metaphors = useContext(MetaContext).metaphors;\r\n  const [showFace, setShowFace] = useState(0);\r\n  const changeMetaphor = () => {\r\n    const nextFace = (showFace + 1) % metaphors.length;\r\n    setShowFace(nextFace);\r\n  };\r\n  const start = 5 * Math.floor(showFace / 5);\r\n  const stop = showFace * Math.floor(showFace / 5) + 5;\r\n  const metaSlice = metaphors.slice(start, stop);\r\n  const cubeClass = rotations[showFace % 5];\r\n  return (\r\n    <Container>\r\n      <Scene onClick={changeMetaphor}>\r\n        <Cube id=\"cube\" className={cubeClass}>\r\n          {metaSlice.map((metaphor, i) => {\r\n            return (\r\n              <CubeFace\r\n                key={metaphor}\r\n                style={{ color: showFace % 5 === i ? \"white\" : \"black\" }}\r\n                className={cubeFaceClasses[i]}\r\n              >\r\n                {metaphor}\r\n              </CubeFace>\r\n            );\r\n          })}\r\n        </Cube>\r\n      </Scene>\r\n    </Container>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  position: fixed;\r\n  border: 2px solid;\r\n  left: 50%;\r\n  top: 50%;\r\n  width: 300px;\r\n  height: 250px;\r\n  margin-left: calc(300px / 2 * -1);\r\n  margin-top: calc(250px / 2 * -1);\r\n  background: white;\r\n  text-align: center;\r\n  z-index: 999;\r\n  padding: 14px;\r\n  border-radius: 20px;\r\n  transition: opacity 1s;\r\n  /* opacity: ${(props) => props.opacity}; */\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  padding: 18px;\r\n  font-size: 1.5rem;\r\n  transition: opacity 1s;\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  border: none;\r\n  background: black;\r\n  color: white;\r\n  margin: 15px;\r\n  padding: 10px;\r\n  width: 70px;\r\n  font-weight: bold;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n  transition: background 0.5s;\r\n  &:hover {\r\n    background: red;\r\n  }\r\n`;\r\n","import React, { useEffect, useContext, useState, useRef } from \"react\";\r\nimport { PopupContext } from \"./\";\r\nimport { Button, ButtonContainer, Container, Wrapper } from \"./styles\";\r\n\r\nexport default function MetaLibConfirm() {\r\n  const [affirmation, setAffirmation] = useState(undefined);\r\n  const popContext = useContext(PopupContext);\r\n\r\n  const welcomeRef = useRef();\r\n\r\n  const yes = () => setAffirmation(true);\r\n  const no = () => setAffirmation(false);\r\n\r\n  useEffect(() => {\r\n    if (!popContext.open) return;\r\n    if (affirmation) {\r\n      popContext.callback.metalib();\r\n      welcomeRef.current.style.opacity = 0;\r\n      popContext.close();\r\n    } else if (affirmation === false) {\r\n      popContext.close();\r\n    }\r\n  }, [affirmation, popContext]);\r\n\r\n  return (\r\n    <Container>\r\n      <div id=\"popup-wrapper\">\r\n        {affirmation === undefined && (\r\n          <>\r\n            <Wrapper>{popContext.content.metalib}</Wrapper>\r\n            <ButtonContainer>\r\n              <Button onClick={yes}>Send it</Button>\r\n              <Button onClick={no}>Wait no!</Button>\r\n            </ButtonContainer>\r\n          </>\r\n        )}\r\n        {affirmation === true && (\r\n          <>\r\n            <Wrapper ref={welcomeRef}>Sent!</Wrapper>\r\n          </>\r\n        )}\r\n        {affirmation === false && (\r\n          <>\r\n            <Wrapper>Okay!</Wrapper>\r\n          </>\r\n        )}\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect, useContext, useState, useRef } from \"react\";\r\nimport { PopupContext } from \"./\";\r\nimport { Button, ButtonContainer, Container, Wrapper } from \"./styles\";\r\n\r\nexport default function Over21() {\r\n  const [affirmation, setAffirmation] = useState(undefined);\r\n  const popContext = useContext(PopupContext);\r\n\r\n  const welcomeRef = useRef();\r\n\r\n  const yes = () => setAffirmation(true);\r\n  const no = () => setAffirmation(false);\r\n\r\n  useEffect(() => {\r\n    if (affirmation) {\r\n      welcomeRef.current.style.opacity = 0;\r\n      document.querySelector(\"video\").play();\r\n      setTimeout(() => popContext.close(), 1000);\r\n    } else if (affirmation === false) {\r\n      setTimeout(() => (window.location.href = \"https://disney.com\"), 1000);\r\n    }\r\n  }, [affirmation, popContext]);\r\n\r\n  return (\r\n    <Container>\r\n      {affirmation === undefined && (\r\n        <>\r\n          <Wrapper>Are you over 21?</Wrapper>\r\n          <ButtonContainer>\r\n            <Button onClick={yes}>Yes</Button>\r\n            <Button onClick={no}>No</Button>\r\n          </ButtonContainer>\r\n        </>\r\n      )}\r\n      {affirmation === true && (\r\n        <>\r\n          <Wrapper ref={welcomeRef}>Welcome!</Wrapper>\r\n        </>\r\n      )}\r\n      {affirmation === false && (\r\n        <>\r\n          <Wrapper>Sorry, this site is too sexy for you</Wrapper>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport styled from \"styled-components\";\r\nimport MetaLibConfirm from \"./MetaLibConfirm\";\r\nimport Over21 from \"./Over21\";\r\n\r\nconst Background = styled.div`\r\n  position: fixed;\r\n  left: 0px;\r\n  top: 0px;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 99;\r\n  opacity: 0.5;\r\n  background: white;\r\n`;\r\n\r\nconst state = {\r\n  open: false,\r\n  close: () => {},\r\n};\r\n\r\nexport const PopupContext = React.createContext(state);\r\n\r\nexport default function ({ children }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [pop, setPop] = useState(undefined);\r\n  const [content, setContent] = useState({});\r\n  const [callback, setCallback] = useState({});\r\n\r\n  const openPopup = (type) => {\r\n    setPop(type);\r\n    setOpen(true);\r\n  };\r\n\r\n  const clear = () => {\r\n    setOpen(false);\r\n    setPop(undefined);\r\n  };\r\n\r\n  const close = () => {\r\n    setTimeout(clear, 1000);\r\n  };\r\n\r\n  return (\r\n    <PopupContext.Provider\r\n      value={{\r\n        callback,\r\n        setCallback,\r\n        content,\r\n        setContent,\r\n        open,\r\n        close,\r\n        setPop,\r\n        pop,\r\n        openPopup,\r\n      }}\r\n    >\r\n      {children}\r\n      <Popup />\r\n    </PopupContext.Provider>\r\n  );\r\n}\r\n\r\nexport function Popup() {\r\n  return createPortal(\r\n    <PopupContext.Consumer>\r\n      {(popup) => (\r\n        <div style={{ display: popup.open ? \"block\" : \"none\" }}>\r\n          <Background /> {popup.pop === \"21\" && <Over21 />}\r\n          {popup.pop === \"metalib-confirm\" && <MetaLibConfirm />}\r\n        </div>\r\n      )}\r\n    </PopupContext.Consumer>,\r\n    document.getElementById(\"portal\")\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Popup, { PopupContext } from \"../Popup\";\r\nimport { MetaContext } from \"./Context\";\r\nimport IntersectionVisible from \"react-intersection-visible\";\r\n\r\nconst Container = styled.div`\r\n  color: white;\r\n  background: black;\r\n  display: flex;\r\n  padding: 40px;\r\n  /* text-transform: capitalize; */\r\n  height: 530px;\r\n  transition: opacity 1s, height 1s;\r\n  form {\r\n    margin: auto;\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 15%;\r\n  width: 100%;\r\n`;\r\n\r\nconst Heading = styled.div`\r\n  font-size: 2rem;\r\n  padding-bottom: 10px;\r\n  text-transform: capitalize;\r\n`;\r\n\r\nconst Verbs = styled.div`\r\n  /* display: flex;\r\n  flex-wrap: wrap; */\r\n  display: grid;\r\n  grid-column-gap: 10px;\r\n  grid-row-gap: 10px;\r\n  grid-template-columns: repeat(auto-fill, minmax(75px, 1fr));\r\n  width: 100%;\r\n  user-select: none;\r\n  cursor: pointer;\r\n  div {\r\n    border: white solid;\r\n    padding: 10px;\r\n    text-align: center;\r\n    /* margin: 10px; */\r\n    transition: background 1s;\r\n    /* &:first-of-type {\r\n      margin-left: 0px;\r\n    } */\r\n  }\r\n`;\r\n\r\nconst Inputs = styled.div`\r\n  transition: opacity 1s, transform 1s;\r\n  &.hidden {\r\n    opacity: 0;\r\n    transform: translateY(-100px);\r\n    visibility: hidden;\r\n  }\r\n  &.shown {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst Like = styled.div`\r\n  font-size: 30px;\r\n  margin: 17px 0px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  background: black;\r\n  border: white solid;\r\n  color: white;\r\n  font-size: 1.5rem;\r\n  padding: 15px;\r\n  width: 66%;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  /* text-transform: capitalize; */\r\n  background: black;\r\n  border: white solid;\r\n  color: white;\r\n  padding: 0;\r\n  margin-top: 24px;\r\n  font-size: 1.6rem;\r\n  cursor: pointer;\r\n  width: 185px;\r\n  height: 54px;\r\n  font-family: Oswald;\r\n`;\r\n\r\nconst verbs = [\"is\", \"feels\", \"smells\", \"tastes\", \"tingles\"];\r\nconst SUBMITTED = \"SUBMITTED\";\r\nexport default function () {\r\n  const addMetaphor = useContext(MetaContext).addMetaphor;\r\n  const popup = useContext(PopupContext);\r\n  const [verb, setVerb] = useState(undefined);\r\n  const [metaphor, setMetaphor] = useState(\"\");\r\n  const [showInput, setShowInput] = useState(false);\r\n  const inputRef = useRef();\r\n  const containerRef = useRef();\r\n\r\n  const selectVerb = (e) => setVerb(e.target.id);\r\n  const handleChange = (e) => setMetaphor(e.target.value);\r\n\r\n  const handleAdd = () => {\r\n    const metalib = `cheri cheri ${verb} like ${metaphor}`;\r\n    popup.setContent({ metalib });\r\n    popup.setCallback({\r\n      metalib: () => {\r\n        addMetaphor(metalib);\r\n        setVerb(SUBMITTED);\r\n      },\r\n    });\r\n    return popup.openPopup(\"metalib-confirm\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (verb === SUBMITTED) {\r\n      containerRef.current.style.opacity = 0;\r\n      containerRef.current.style.height = 0;\r\n      setTimeout(() => (containerRef.current.style.display = \"none\"), 1500);\r\n      return;\r\n    }\r\n    if (verb) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [verb]);\r\n\r\n  return (\r\n    <>\r\n      <Container ref={containerRef}>\r\n        <Wrapper>\r\n          <Heading>cheri cheri</Heading>\r\n          <IntersectionVisible onShow={() => setShowInput(true)}>\r\n            <Verbs>\r\n              {verbs.map((verbOption) => (\r\n                <div\r\n                  key={verbOption}\r\n                  id={verbOption}\r\n                  onClick={selectVerb}\r\n                  style={{ background: verb === verbOption ? \"red\" : \"black\" }}\r\n                >\r\n                  {verbOption}\r\n                </div>\r\n              ))}\r\n            </Verbs>\r\n          </IntersectionVisible>\r\n          <Inputs className={verb || showInput ? \"shown\" : \"hidden\"}>\r\n            <Like>like</Like>\r\n            <Input\r\n              ref={inputRef}\r\n              onChange={handleChange}\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"Enter\") handleAdd();\r\n              }}\r\n              name=\"metaphor\"\r\n              id=\"metaphor\"\r\n            ></Input>\r\n            <div>\r\n              <Button onClick={handleAdd}>add metaphor</Button>\r\n            </div>\r\n          </Inputs>\r\n        </Wrapper>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport MetaCube from \"./MetaCube\";\r\nimport MetaLib from \"./MetaLib\";\r\nimport Provider from \"./Context\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MetaContainer = styled.div`\r\n  @media screen and (min-width: 500px) {\r\n    justify-content: space-evenly;\r\n    display: flex;\r\n    background: black;\r\n    align-items: center;\r\n  }\r\n`;\r\nexport default function () {\r\n  return (\r\n    <MetaContainer>\r\n      <Provider>\r\n        <MetaCube />\r\n        <MetaLib />\r\n      </Provider>\r\n    </MetaContainer>\r\n  );\r\n}\r\n","import React, { createContext, useEffect, useState } from \"react\";\r\nimport whiteBox from \"../../assets/white_box.png\";\r\nexport const LoadingContext = createContext({});\r\nwindow.imgMeta = [];\r\nwindow.preRenderWidth = window.innerWidth;\r\nexport default function ({ children }) {\r\n  const [loading, setLoading] = useState(true);\r\n  const [transition, setTransition] = useState({});\r\n  useEffect(() => {\r\n    const imgData = [\r\n      { src: `${process.env.PUBLIC_URL}/cherry.svg`, name: \"cherry\" },\r\n      { src: whiteBox, name: \"white-box\" },\r\n    ];\r\n    imgData.forEach((imgObject) => {\r\n      const imgEl = new Image();\r\n      imgEl.src = imgObject.src;\r\n      imgEl.onload = () => {\r\n        window.imgMeta = {\r\n          ...window.imgMeta,\r\n          [imgObject.name]: {\r\n            src: imgObject.src,\r\n            aspect: imgEl.width / imgEl.height,\r\n          },\r\n        };\r\n      };\r\n    });\r\n    // const boxVideoEl = document.createElement(\"video\");\r\n    // boxVideoEl.src = boxVideo;\r\n    // document.body.appendChild(boxVideoEl);\r\n    // window.preloadedImages = [cherryImg, whiteBox];\r\n  }, []);\r\n\r\n  const endLoading = () => {\r\n    setTransition(\"out\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (transition === \"done\") {\r\n      setLoading(false);\r\n    }\r\n  }, [transition]);\r\n\r\n  const startLoading = () => setLoading(true);\r\n\r\n  return (\r\n    <LoadingContext.Provider\r\n      value={{\r\n        loading,\r\n        endLoading,\r\n        startLoading,\r\n        transition,\r\n        setTransition,\r\n      }}\r\n    >\r\n      {children}\r\n    </LoadingContext.Provider>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useRef } from \"react\";\r\nimport Svg from \"react-inlinesvg\";\r\nimport styled from \"styled-components\";\r\nimport { LoadingContext } from \"./Context\";\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  width: 200px;\r\n  height: 200px;\r\n  left: 50%;\r\n  top: 50%;\r\n  margin-left: -100px;\r\n  margin-top: -100px;\r\n  transition: opacity 1s;\r\n`;\r\n\r\nexport default function Cherry() {\r\n  const containerRef = useRef();\r\n  const frameRef = useRef();\r\n\r\n  const loadingContext = useContext(LoadingContext);\r\n  useEffect(() => {\r\n    if (loadingContext.transition === \"out\") {\r\n      containerRef.current.style.opacity = 0;\r\n      setTimeout(() => loadingContext.setTransition(\"done\"), 1000);\r\n    }\r\n  }, [loadingContext.transition]);\r\n\r\n  useEffect(() => {\r\n    return () => cancelAnimationFrame(frameRef.current);\r\n  }, []);\r\n\r\n  const loaded = () => {\r\n    const container = containerRef.current;\r\n    let counter = 0;\r\n    const animate = () => {\r\n      const wave = 1 + Math.sin(counter * 0.1) * 5;\r\n      container.style.transform = `rotate3d(${wave}, ${1}, ${1}, ${counter}deg)`;\r\n      counter++;\r\n      frameRef.current = requestAnimationFrame(animate);\r\n    };\r\n    animate();\r\n  };\r\n  return (\r\n    <Container ref={containerRef}>\r\n      <Svg src={`${process.env.PUBLIC_URL}/cherry.svg`} onLoad={loaded} />\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport Svg from \"react-inlinesvg\";\r\n\r\n// DEPRECATED\r\n\r\nexport default function () {\r\n  useEffect(() => {}, []);\r\n  return (\r\n    <div>\r\n      <Svg\r\n        src={require(\"./triangleswater.svg\")}\r\n        onLoad={() => {\r\n          document.getElementById(\"water\");\r\n          // .setAttribute(\"transform\", \"translate(-20.03) scale(0.2 0.2)\");\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n// atranslate(0.03, -167) scale(.25 0.25)\r\n// https://media1.tenor.com/images/607c74e4c59a64da7db742c6d471ed6e/tenor.gif?itemid=14577501\r\n","import React, { useContext, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport whiteBox from \"../../assets/white_box.png\";\r\nimport Cherry from \"../Loading/Cherry\";\r\nimport { LoadingContext } from \"../Loading/Context\";\r\n\r\nconst Img = styled.img`\r\n  width: 100%;\r\n  opacity: 0;\r\n  transition: opacity 2s;\r\n`;\r\n\r\nexport default function () {\r\n  const imgRef = useRef();\r\n  const loadingContext = useContext(LoadingContext);\r\n  useEffect(() => {\r\n    loadingContext.startLoading();\r\n    // imgRef.current.onload = () => {\r\n    //   alert(\"img loaded\");\r\n    loadingContext.endLoading();\r\n    imgRef.current.style.opacity = 1;\r\n    imgRef.current.style.visibility = \"visible\";\r\n    // };\r\n\r\n    return () => {\r\n      imgRef.current.opacity = 0;\r\n      imgRef.current.visibility = \"hidden\";\r\n    };\r\n  }, []);\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"relative\",\r\n        height:\r\n          window.imgMeta[\"white-box\"] &&\r\n          window.preRenderWidth / window.imgMeta[\"white-box\"].aspect,\r\n        minHeight: 200,\r\n      }}\r\n    >\r\n      <Img ref={imgRef} src={whiteBox} />\r\n      {loadingContext.loading && <Cherry />}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Flower from \"../Bits/Icons/Flower\";\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  /* border: solid black; */\r\n\r\n  /* div {\r\n    border: solid red;\r\n  } */\r\n`;\r\n\r\nconst Box = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 30px;\r\n`;\r\n\r\nexport default function () {\r\n  return (\r\n    <Container>\r\n      <Box>\r\n        <Flower />\r\n      </Box>\r\n      <Box>\r\n        <Flower />\r\n      </Box>\r\n      <Box>\r\n        <Flower />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Product from \"../Product\";\r\nimport { animated, useSpring } from \"react-spring\";\r\nconst Container = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nexport default function () {\r\n  const props = useSpring({\r\n    opacity: 1,\r\n    from: { opacity: 0 },\r\n    config: { duration: 3000 },\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <animated.div style={props}>\r\n        <Product />\r\n      </animated.div>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\nimport { DeviceContext } from \".\";\r\nimport Nav from \"./Nav\";\r\nimport NavProvider from \"./NavContext\";\r\nimport Home from \"./pages/Home\";\r\nimport Product from \"./pages/Product\";\r\nimport Three from \"./pages/Three\";\r\nimport { useTransition, animated } from \"react-spring\";\r\n\r\nconst WrappedRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <div id=\"page-root\">\r\n      <Route component={Component} />\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  const location = useLocation();\r\n  const transitions = useTransition(location, (location) => location.pathname, {\r\n    from: { opacity: 0, transform: \"translate3d(100%,0,0)\" },\r\n    enter: { opacity: 1, transform: \"translate3d(0%,0,0)\" },\r\n    leave: { opacity: 0, transform: \"translate3d(-50%,0,0)\" },\r\n  });\r\n  const device = useContext(DeviceContext);\r\n  if (device.isMobile === undefined) return <div>loading...</div>;\r\n  return (\r\n    // <Router basename=\"/\">\r\n    <>\r\n      <Nav device={device} />\r\n      {/* {transitions.map(({ item: location, props, key }) => ( */}\r\n      {/* <animated.div key={key} style={props}> */}\r\n      <Switch location={location}>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/oil\" component={Product} />\r\n        {/* <Route path=\"/three\" component={Three} /> */}\r\n        <Route path=\"/fuck\" render={() => <div>fuck</div>} />\r\n      </Switch>\r\n      {/* </animated.div> */}\r\n      {/* ))} */}\r\n      {/* <Switch>\r\n          <Route path=\"/three\" component={Three} />\r\n          <Route path=\"/product\" component={Product} />\r\n          <WrappedRoute path=\"/\" component={Home} />\r\n        </Switch> \r\n    </Router>*/}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { createContext, useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport \"./animations.css\";\nimport PopupProvider from \"./Popup\";\nimport NavProvider from \"./NavContext\";\nimport LoadingProvder from \"./Bits/Loading/Context\";\nimport { HashRouter as Router } from \"react-router-dom\";\nexport const DeviceContext = createContext(undefined);\n\nconst DeviceProvider = ({ children }) => {\n  const [isMobile, setIsMobile] = useState(undefined);\n\n  const updateSize = () => {\n    if (window.innerWidth > window.innerHeight) {\n      setIsMobile(false);\n    } else {\n      setIsMobile(true);\n    }\n  };\n  useEffect(() => {\n    updateSize();\n    window.addEventListener(\"resize\", updateSize);\n\n    return () => window.removeEventListener(\"resize\", updateSize);\n  }, []);\n  return (\n    <DeviceContext.Provider value={{ isMobile }}>\n      {children}\n    </DeviceContext.Provider>\n  );\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <DeviceProvider>\n      <PopupProvider>\n        <LoadingProvder>\n          <NavProvider>\n            <Router basename=\"/\">\n              <App />\n            </Router>\n          </NavProvider>\n        </LoadingProvder>\n      </PopupProvider>\n    </DeviceProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}